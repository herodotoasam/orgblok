* TODO comprar antipolillas :dpto:

[2018-10-10 mié 10:33]

* TODO limpiar estantes vestidor :dpto:

[2018-10-10 mié 10:34]

* DONE encarpetar documentos pendientes :dpto:oficina:
- State "DONE"       from "TODO"       [2018-10-12 vie 14:05]
[2018-10-10 mié 10:35]

* TODO llevar todos los recibos y doc viejos al marques :dpto:oficina:

[2018-10-10 mié 10:35]

* TODO facilidades fechadoras :IDEA:

Se podrían hacer múltiples. bind en tablet list para allá en facilitación del fechado por ejemplo poner números y que eso sean interpretados inteligentemente Cómo fechas tal cual ya habíamos hecho en una función de python y letras correspondiente a los días de semana incluso teniendo en cuenta cuando se trata de no la semana que viene si no la otra también se podría tener en cuenta más inteligentemente el teclas o mes siguiente que no sea tan irritante en los casos qué en vez de pasar por ejemplo para el día 10 del mes siguiente pase para el día 9 del mes siguiente porque este mes tenga 31 días.

* TODO Edicion en ventana aparte del fechar :IDEA:
:PROPERTIES:
:CREADO:   [2018-10-26 Fri 16:02]
:END:

Podría ser que cuando se va bajando en el fechar renglón por renglón y uno pusiera o apretar a un botón decisión que tú ir incrustado en el tablero y se abrir una ventana emergente donde estuvieran todos los campos editable y uno atrás de otro con un encabezado fijo de los datos del cliente editar con los datos fijos y todos los campos editables que suelen surgir cuando uno está editando el estado que hay podría hacer editar una dirección editor teléfono y ello tener digamos acceso a la Macro de guardar a ex dirección y a su vez que podamos evitar digamos todo lo que es aclaración horarios mensaje al cobrador y comentarios y poner tag de gestión tag mudado tarde bueno todo lo otro está que todavía no están programados como tag de no vender más tarde a la venta s13 tras subir al se deben emitir intimaciones ese te lo deseo todo el trabajo del cliente que se haga en una ventanita en forma más segura una que se terminó con el cliente se pone guardar eso se pliega Y si sigue con el cliente entonces esa sería una forma muy eficiente porque se trabajaría sobre un listado sobre una planilla pero al aves se abriría una ventana donde estarían todas las facilidades de trabajo dentro de esa ventana que no sería muy grande sino que sería más o menos compacta para que no oculte del todo el listado que esté abajo

* Planes de pago :IDEA:
:PROPERTIES:
:CREADO:   [2018-10-27 Sat 11:55]
:END:

condonar la cuenta
crear una "venta" nueva con los vtos y el monto nuevo.
el tema seria no afectar las estadísticas de venta reales con estas ventas fictas por lo cual se debe buscar una solucion.
O bien nuevos campos en tabla venta 
Planpago logico
Ccpp int
icpp int
Primerapp date
Y reescribir los procesos virtuales q producen on the fly el cuotaje y el pagaje que cuando ventas.planpago=1 tome los campos pp en vez de los normales y tome los pagos hechos posteriores al plan de pago. A su vez la info permanece intacta y se puede visualizar.

Como se haria con los casos en q son dos las cuentas. Para no partir el plan de pagos y siendo q nace de un acuerdo se podria condonar una la mas chica y poner el plan en la mas grande y anotar esa circunstancias. Para q salga una ficha unificada.
El tema es q saldria de x la cuenta y (la z estaria condonada) y generaria p.e 3 cuotas de 300 q es lo q acordo el cliente.  Y se iria cobrando eso incluso se puede marcar como plan de pago pero sin cuota a las q son hijas de un mismo pp.
Podria haber una tbl de plan de pago q genere un id q lo cargue en tbl ventas en los registros afectados y en solo uno cargue las cuotas. Luego registre toda la otra info del pp. 

* Nueva programación :programacion:IDEA:
:PROPERTIES:
:CREADO:   [2018-10-27 Sat 23:03]
:END:

~Como debe ser lo nuevo:
- documentado: en extremo asi como se esta haciendo el nuevo buscador
- ordenado: guardar convenciones logicas para los nombres de los widgets variables y procs
- estructura
createWidgets
createBindings
Procedimientos primero luego dos proc q contienen la UI que se instancia despues a lo python
- uso de namespace eval para guardar variables privadamente y no mezclar con lo global

namespace eval tClip {
    variable on_top    false
    variable word_wrap none
    variable selected  ""
    variable cliplist  [list]
    variable theme     [ttk::style theme use]
    variable type      [expr {[tk windowingsystem] eq "x11" ? "UTF8_STRING" : "STRING"}]
}
- se podria documentar cada script en forma unificada o similar o siguiendo la misma estructura para q sea facil de leer.
P.e. tener una parte q diga q tablas usa y q campos necesita

* Arreglo de tablas :programacion:IDEA:insomnio:
:PROPERTIES:
:CREADO:   [2018-10-28 Sun 10:07]
:END:

Una vez q arregle app por app dando de baja cada aplicación vieja pq ya TODAS las funciones ya fueron incluidas (como quiero hacer con F13+fichaje.py/ver -->buscador.tcl) voy a anotar las tablas y los campos q realmente uso. Deberia agregar el campo q quiera con el nombre q quiera. Y no reusar campos obsoletos. Y anotar las consultas q uso si es q uso alguna y los triggers.
Luego en un script reescribir el traspaso de tablas a su nuevo schema y hacer un test bien groso sobre todas las aplicaciones oficiales a partir de ese momento.
Y ahi se hara la limpieza de la base de datos del pasado y se hara el paso definitivo a una nueva version de los programas q supere toda la tanda de los actuales y quiza sea incompatible con ellos. Pero el tamaño de la db sera menor y el schema mejor.

* Buscador :programacion:
:PROPERTIES:
:CREADO:   [2018-10-28 Sun 10:30]
:END:

Creo q el camino de crear virtualmente en el arranque una tabla cuotas de todas las cuentas y luego hacer un proceso de llenado de recibos no sirve.

Creo q tendria q avanzar teniendo un buscador con todo lo q tienen ambos predecesores.

En todo caso si un proceso permitiria crear los datos q quiero hay q hacerlos cliente por cliente. O sea al llenardatoscliente hago tabla cuotas del cliente con su proceso pago desde su set de recibos con idcliente x. La carga de tjo es 30000 veces menos y es mas rapida. 
O bien se podria usar namespace o una class para mantener abiertas distintas tabs como queria yo.
O sea q haya un buscador en un 20% de la pantalla y luego el resultado abajo por tabs cosa q podamos tener varios clientes abiertos en paralelo. Al estilo Firefox. Esta idea es genial.

Entonces bajo la parafernalia de labels de info no editable y algunos entrys editables vendra un tbls de ventas por orden coloreadas tageadas (cancelada devuelta condonada pagando) que con un tree se abrira y se calculara el cuotaje.

Se podra imprimir resumen de cuenta de cuentas canceladas con menu como f13

* Exportar contactos a telefono :programacion:
:PROPERTIES:
:CREADO:   [2018-10-28 Sun 16:09]
:END:

Tener por script la posibilidad de exportar los contactos en formato vcf p.e.
Entonces producimos el romitex.vcf con digamos 5000 contactos y de ahi lo importamos con un gestor eficiente de contactos y de ahi a whatapp web o un bot o wrapper futuro

* tclshrc :LEER:
:PROPERTIES:
:CREADO:   [2018-10-28 Sun 17:48]
:END:

https://wiki.tcl-lang.org/page/tclshrc

La idea seria poner todo lo necesario para tjar en el proyecto
Package require etc.

* Ayuda de eGuard 2 - eggdrop.es :LEER:
:PROPERTIES:
:CREADO:   [2018-10-28 Sun 23:48]
:END:

http://eggdrop.es/ayuda/script/eguard2/

* TODO [#A] Ver cuentas :oficina:
DEADLINE: <2018-10-31 Wed>
:PROPERTIES:
:CREADO:   [2018-10-29 Mon 09:20]
:END:

Llevar doc 70037 de la devolución
Analizar 69965

* DONE Acomodar el celu :actividad:retiro:
:PROPERTIES:
:CREADO:   [2018-10-29 Mon 19:24]
:END:
- State "DONE"       from "TODO"       [2018-10-31 mié 19:09]
- [ ] anotar todas las apk q voy borrando cuanto las tuve si las use
  mucho poco o nada para q la instale que funcion buscaba y con cual
  la reemplace.
- [ ] borrar obviamente la apk
- [ ] reacomodar las pantallas dejar solo 3

* Pin para app romitex :programacion:IDEA:
:PROPERTIES:
:CREADO:   [2018-10-29 Mon 19:29]
:END:

Poner pin de seguridad a dni.tcl para q en caso de q roben el celu
podas proteger la app si fallan el pin mas de 5 veces seguidas se
borra la base de datos y los programas.

* DONE [#A] Comprar extractor :oficina:
SCHEDULED: <2018-10-30 Tue>
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 09:12]
:END:
- State "DONE"       from "TODO"       [2018-10-31 mié 19:09]
Se averiguo y llego a la conclusion que la compra del extractor no
estaria ligada a Andres el constructor pq un extractor de ventana no
sirve para lo que nosotros queremos. hay que hacer uno con tubos, y
ese lo pongo yo como puse en la cabaña los caños perforando el bloque.

* DONE [#A] Hacer caja
SCHEDULED: <2018-10-30 Tue>
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 09:13]
:END:
- State "DONE"       from "TODO"       [2018-11-01 jue 17:47]

* Text Note: Org-mode Frequently Asked Questions :orgmode:
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 12:18]
:END:

Why is a blank line inserted after headlines and list items?  In
org-mode, typing M-RET at the end of a headline will create a new
headline of the same level on a new line. The same is true for plain
lists. By default org-mode uses context to determine if a blank line
should be inserted after each headline or plain list item when M-RET
is pressed. For instance, if a there is a blank line before a
headline, then typing M-RET at the end of the line will insert a blank
line before the new headline. For instance, hitting M-RET at the end
of "Headline Two" below inserts a new headline without a blank line:

 ** Headline One Headline Two

If there is a blank line between Headline One and Headline Two,
however, the results will be as follows:

 ** Headline One

 ** Headline Two

 **

If you do not like the default behavior you can change it with the
variable org-blank-before-new-entry. You can set headings and/or plain
lists to auto (the default setting), t (always), or nil (never).

https://orgmode.org/worg/org-faq.html#keeping-current-with-Org-mode-development



Sent using Zoho Notebook - Android

* Text Note: Org-mode Frequently Asked Questions :orgmode:
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 12:18]
:END:

How can I promote or demote multiple headlines at once?  If you have a
long list of first level headlines that you'd like to demote to second
level headlines, you can select the headlines as a region and then hit
M- to demote all the headlines at once.

Note: M-S- will not work on a selected region. Its use is to demote a
single subtree (i.e., a headline and all sub-headlines).

If M- doesn't seem to work, make sure transient mark mode is
enabled. See this FAQ.

https://orgmode.org/worg/org-faq.html#keeping-current-with-Org-mode-development



Sent using Zoho Notebook - Android

* negligencias
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 12:44]
:END:

negligencias

❏ service bora dejan todo el dia el auto no hacen nada
❏ claro dos chip reclaman dos telefonos cortan linea
❏ garbarino flete helader
❏ tramite gol prenda bco nacion/gestor
❏ fibertel instalacion dpto
❏ arnet instalacion dpto
❏ lacaja seguro bora

* Wunderlist - Peso
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 12:46]
:END:

Peso

❏ 25/9/18 83.60 limpio
❏ 8/6/18 85.16 botas
❏ 15/5 84.4k botas 2k
❏ 2/5/18 83.95 
❏ 28/4 82.2 k fede
❏ 11/4/18 84.5k limpio
❏ 11/3 84.6 limpio
❏ 12/1/18 87kg
❏ 11/12/17 88.6k limpio
❏ 18/10 92.70 limpio
❏ 18/9/17 91.34 limpio
❏ 10/08/17 93.3 con botas
❏ 7/7/17 92.7 con botas y campera
❏ 4/5 89.6
❏ 24/3 89.6
❏ 27/8 85.9
❏ 30/7 87.2 con botas en casa
❏ 21/5 87.4 -2 85.4
❏ 7/5 84.1
❏ 16/4 84.1
❏ 2/4 84.9
❏ 20/2 87.9

* Wunderlist - Numbers
:PROPERTIES:
:CREADO:   [2018-10-30 Tue 12:47]
:END:

Numbers

❏ orozco1493 hfj050 ataraxia76
❏ clave wifi ofi romitex123
❏ TN IH 623isabel ✭
❏ cable vera romitexcba@gmail ataraxia
❏ turnos hp Orozco96
❏ ospe web Orozco96
❏ Bolsa riñón 35x45
❏ Fibertel dpto hfj024 ataraxia
❏ Naranja online hfj024 ataraxia76
❏ Telecom mariaisaheredie  1493
❏ Ecogas verá mariaisaheredie ataraxia76.
❏ Mariaisaheredie@gmail ataraxia76
❏ Cidi Isabel Ataraxia76 
❏ Orozco96.JujuY nueva hfj024 
❏ Caruso SALVAY542 orozco96
❏ HP Orozco96
❏ Orozco96 1493
❏  ataH2132**/asam3161 ✭
❏ Aguas hfj024 ataraxia76
❏ Telecom romi romitexcba 3161
❏ Mia 390-107/2 ✭
❏ Tipo 000-18426/7 ✭
❏ Here ata3161
❏ Sony ata3161.
❏ ataH2132.
❏ Clarin  Herrera796
❏ Estereo 1206 luego >>>> hace beep

* DONE pagar dpto/exp/agua/depFede
SCHEDULED: <2018-11-01 jue>
- State "DONE"       from "TODO"       [2018-11-01 jue 17:46]

* Por fin volvi al trabajo :retiro:
:PROPERTIES:
:CREADO:   [2018-11-16 Fri 18:58]
:END:

Hoy volvi!!!!!!!!
Y fue grandioso.
Creo q no debo dejar de trabajar y no debo ser mas condescendiente con nadie.
Y eso incluye a la cami.
Si no le gusta el trabajo q se vaya.
Ya me canso.
Total a partir de ahora estoy de vuelta.

La idea es seguir programando pero para q sea mas facil las tareas reales.

* DONE Evaluar atom orgmode
CLOSED: [2018-11-19 Mon 21:26]
:PROPERTIES:
:CREADO:   [2018-11-16 Fri 19:03]
:END:

* DONE Mejorar dni.tcl :IDEA:
CLOSED: [2018-11-19 Mon 21:26]
:PROPERTIES:
:CREADO:   [2018-11-16 Fri 19:04]
:END:

Para facilitar los pedidos de fichas

* TODO Mobile
:PROPERTIES:
:CREADO:   [2018-11-19 Mon 21:42]
:END:

Que el pdf generado se llame callenum y no temp como ahora

* TODO Ver en programacion :programacion:IDEA:
:PROPERTIES:
:CREADO:   [2018-11-19 Mon 21:56]
:END:

Gridplus
Seguir con TODO dentro de VS para el control de cerca de los proyectos
Releer el manual de itcl itk y perfeccionar el itk2
Chequear el programar en androwish via tkhellowish para ver si se puede usar el ambiente de desarrollo de android


<<<<<<< HEAD

* Packer :programacion:IDEA:
:PROPERTIES:
:CREADO:   [2018-11-21 Wed 22:20]
:END:

proc packs {args} {
frame .funique
Pack 

* Sistema
:PROPERTIES:
:CREADO:   [2018-11-28 Wed 22:37]
:END:

12k 60 vtas 100 la vta abandonada
Cospeles aparte con gps
Puede ser pagar los cospeles de la casa y q sea voluntario
Vta 233 13%
Inc......... 14%
Costo.....25%
Cobrad...13%
Reparto....3%
Neto.........68% 32% real

* Chequear
:PROPERTIES:
:CREADO:   [2018-11-30 Fri 07:49]
:END:

1 que poner :var no previene ante variables con espacio en el medio
2 que en la creacion de tablas se puede hacer el type affinity int o integer y eso elimina el problema de que guarde el valor como texto sin convertirlo 

* Sistemas faltantes
:PROPERTIES:
:CREADO:   [2018-11-30 Fri 13:23]
:END:

Buscador
Bug historial

Que el +- en numero rote en los num con cuentas y no en todos

Sist de manejo de doc pedidos 
Con campo en vta traerdoc y docenofi docdevuelto

Falta sistema pide venta incluso con clausula de tiempo p.e. cuando cancele. O avisar precios etc

Impresion de resumen de cuenta
Cuentas canceladas

* Recibos
:PROPERTIES:
:CREADO:   [2018-11-30 Fri 22:27]
:END:

Fecha cobr lote
Cuenta combo cta nombre calle num de todas las cuentas del cobr

* Sistema seven
:PROPERTIES:
:CREADO:   [2018-12-01 Sat 23:58]
:END:

Subidor de datos y estadisticas
de seven
Para no depender mas de python
Primero no debe quedar ninguna funcion en python util o usable o necesaria
en este momento quedan seven y listado clientes
Y pedidos
idem recorrer el tcl viejo
Luego queda refactorización y documentar.
Y borrar las tablas y vistas que no uso.

* Programa
:PROPERTIES:
:CREADO:   [2018-12-02 Sun 09:35]
:END:

1 ciclo
TCL BASICO
TABLELIST
SQLITE BASICO
ITCL
2 ciclo
intro a C
Tcl avanzado
sqlite avanzado
Android studio java

* Tema articulos
:PROPERTIES:
:CREADO:   [2018-12-03 Mon 13:30]
:END:

Limitar los art en el uso a los q tenemos
Permitir la facil edicion de precio y costo
Historial de precios
Historial de costos
facil edicion de precios



=======

* TODO ventas :programacion:

[2018-12-04 mar 17:32]
ver
>>>>>>> branch 'master' of https://gitlab.com/heroasam/orgblok.git

* Contingentes
:PROPERTIES:
:CREADO:   [2018-12-11 Tue 20:53]
:END:

Sistema parasimpático funcionando normal
Las presiones parecen mas grandes cuando uno esta fuera de la accion

* Editador de ventas
:PROPERTIES:
:CREADO:   [2018-12-13 Thu 11:23]
:END:

Ponerlo en otros lados y mejorarlo
Hacerle borrador
Y ponerle trace

* Hacer resumen cuenta ctas viejas
:PROPERTIES:
:CREADO:   [2018-12-13 Thu 11:24]
:END:

* Ideas
:PROPERTIES:
:CREADO:   [2018-12-16 Sun 01:09]
:END:

arreglos fondo bloating pintar máquina red
Captar promocobrador cortinas mknizona sin reparto sin zona fija
disp oficina hasta 17hs
Futuro gte cuentas gestione 8 minicobradores y una zona de 500lucas gane 30
Meta vender 1000 cortinas monoarticulos ir a todos los barrios
Volante con wapp e instagram encargada de contenido digital



* Bridge
:PROPERTIES:
:CREADO:   [2018-12-19 Wed 17:41]
:END:

No generar csv y leer sino conectar un tcl a sqlite y a postgres y pasar los datos de una a otra


* Catalogo
:PROPERTIES:
:CREADO:   [2018-12-19 Wed 17:43]
:END:

Tabla
Tabla colname type descripciones
o sea catalogo y documento en un tbls


* Todo
:PROPERTIES:
:CREADO:   [2018-12-31 Mon 19:51]
:END:

1 ver kate para para programar
2 instalar nts en dpto
3 buscar verde
4 programar impresion de listado de ventas
5 triguer clientes.pagado
6 manejar users via postgres dialog log user pass y con eso armar el pgconect y agregar campos logtimestamp user en todas las tablas
7 hacer pivot anual ventas crregido por inflacion

* Idea
:PROPERTIES:
:CREADO:   [2019-01-04 Fri 00:43]
:END:

No numerar correlativamente las ventas
Sino hacerlo como cliente01 etc y hacer series repetidas de recibos 

* Pivot con tree
:PROPERTIES:
:CREADO:   [2019-01-12 Sat 08:06]
:END:

En llenar poner llenartree
Y rn el expandir generar el pívot 4ta dimension

* Funcion deflactadora
:PROPERTIES:
:CREADO:   [2019-01-12 Sat 08:08]
:END:

Cargar una tabla la serie desde el csv y hacer la funcion y obtener los graficos desde dentro



* Create materializaded view
:PROPERTIES:
:CREADO:   [2019-01-12 Sat 23:59]
:END:

* CREATE FUNCTION merge_fields(t_row table1) RETURNS text AS $$ DECLARE     t2_row table2%ROWTYPE; BEGIN     SELECT * INTO t2_row FROM table2 WHERE ... ;     RETURN t_row.f1 || t2_row.f3 || t_row.f5 || t2_row.f7; END; $$ LANGUAGE plpgsql;  SELECT merge_fields(t.*) FROM table1 t WHERE ... ;
:PROPERTIES:
:CREADO:   [2019-01-20 Sun 08:45]
:END:

* The result of a SQL command yielding a single row (possibly of multiple columns) can be assigned to a record variable, row-type variable, or list of scalar variables. This is done by writing the base SQL command and adding an INTO clause. For example,  SELECT select_expressions INTO [STRICT] target FROM ...;
:PROPERTIES:
:CREADO:   [2019-01-20 Sun 08:54]
:END:

* 8th November 2018: PostgreSQL 11.1, 10.6, 9.6.11, 9.5.15, 9.4.20, and 9.3.25 Released! Documentation → PostgreSQL devel (2019-01-20 08:17:03) Supported Versions: Current (11) / 10 / 9.6 / 9.5 / 9.4 Development Versions: devel Unsupported versions: 9.3 / 9.2 / 9.1 / 9.0 / 8.4 / 8.3 / 8.2 / 8.1 / 8.0 / 7.4 / 7.3 / 7.2  Search the documentation for...  42.6. Control Structures Prev 	Up	Chapter 42. PL/pgSQL - SQL Procedural Language	Home	 Next 42.6. Control Structures 42.6.1. Returning From a Function 42.6.2. Returning From a Procedure 42.6.3. Calling a Procedure 42.6.4. Conditionals 42.6.5. Simple Loops 42.6.6. Looping Through Query Results 42.6.7. Looping Through Arrays 42.6.8. Trapping Errors 42.6.9. Obtaining Execution Location Information Control structures are probably the most useful (and important) part of PL/pgSQL. With PL/pgSQL's control structures, you can manipulate PostgreSQL data in a very flexible and powerful way.  42.6.1. Returning From a Function There are two commands available that allow you to return data from a function: RETURN and RETURN NEXT.  42.6.1.1. RETURN RETURN expression; RETURN with an expression terminates the function and returns the value of expression to the caller. This form is used for PL/pgSQL functions that do not return a set.  In a function that returns a scalar type, the expression's result will automatically be cast into the function's return type as described for assignments. But to return a composite (row) value, you must write an expression delivering exactly the requested column set. This may require use of explicit casting.  If you declared the function with output parameters, write just RETURN with no expression. The current values of the output parameter variables will be returned.  If you declared the function to return void, a RETURN statement can be used to exit the function early; but do not write an expression following RETURN.  The return value of a function cannot be left undefined. If control reaches the end of the top-level block of the function without hitting a RETURN statement, a run-time error will occur. This restriction does not apply to functions with output parameters and functions returning void, however. In those cases a RETURN statement is automatically executed if the top-level block finishes.  Some examples:  -- functions returning a scalar type RETURN 1 + 2; RETURN scalar_var;  -- functions returning a composite type RETURN composite_type_var; RETURN (1, 2, 'three'::text);  -- must cast columns to correct types 42.6.1.2. RETURN NEXT And RETURN QUERY  RETURN NEXT expression; RETURN QUERY query; RETURN QUERY EXECUTE command-string [ USING expression [, ... ] ]; When a PL/pgSQL function is declared to return SETOF sometype, the procedure to follow is slightly different. In that case, the individual items to return are specified by a sequence of RETURN NEXT or RETURN QUERY commands, and then a final RETURN command with no argument is used to indicate that the function has finished executing. RETURN NEXT can be used with both scalar and composite data types; with a composite result type, an entire “table” of results will be returned. RETURN QUERY appends the results of executing a query to the function's result set. RETURN NEXT and RETURN QUERY can be freely intermixed in a single set-returning function, in which case their results will be concatenated.  RETURN NEXT and RETURN QUERY do not actually return from the function — they simply append zero or more rows to the function's result set. Execution then continues with the next statement in the PL/pgSQL function. As successive RETURN NEXT or RETURN QUERY commands are executed, the result set is built up. A final RETURN, which should have no argument, causes control to exit the function (or you can just let control reach the end of the function).  RETURN QUERY has a variant RETURN QUERY EXECUTE, which specifies the query to be executed dynamically. Parameter expressions can be inserted into the computed query string via USING, in just the same way as in the EXECUTE command.  If you declared the function with output parameters, write just RETURN NEXT with no expression. On each execution, the current values of the output parameter variable(s) will be saved for eventual return as a row of the result. Note that you must declare the function as returning SETOF record when there are multiple output parameters, or SETOF sometype when there is just one output parameter of type sometype, in order to create a set-returning function with output parameters.  Here is an example of a function using RETURN NEXT:  CREATE TABLE foo (fooid INT, foosubid INT, fooname TEXT); INSERT INTO foo VALUES (1, 2, 'three'); INSERT INTO foo VALUES (4, 5, 'six');  CREATE OR REPLACE FUNCTION get_all_foo() RETURNS SETOF foo AS $BODY$ DECLARE     r foo%rowtype; BEGIN     FOR r IN         SELECT * FROM foo WHERE fooid > 0     LOOP         -- can do some processing here         RETURN NEXT r; -- return current row of SELECT     END LOOP;     RETURN; END $BODY$ LANGUAGE plpgsql;  SELECT * FROM get_all_foo();
:PROPERTIES:
:CREADO:   [2019-01-20 Sun 09:05]
:END:

* FOR i IN 1..10 LOOP     -- i will take on the values 1,2,3,4,5,6,7,8,9,10 within the loop END LOOP;  FOR i IN REVERSE 10..1 LOOP     -- i will take on the values 10,9,8,7,6,5,4,3,2,1 within the loop END LOOP;  FOR i IN REVERSE 10..1 BY 2 LOOP     -- i will take on the values 10,8,6,4,2 within the loop END LOOP;
:PROPERTIES:
:CREADO:   [2019-01-20 Sun 09:15]
:END:

* CREATE PROCEDURE transaction_test2() LANGUAGE plpgsql AS $$ DECLARE     r RECORD; BEGIN     FOR r IN SELECT * FROM test2 ORDER BY x LOOP         INSERT INTO test1 (a) VALUES (r.x);         COMMIT;     END LOOP; END; $$;  CALL transaction_test2();
:PROPERTIES:
:CREADO:   [2019-01-20 Sun 11:56]
:END:

Para generar cuotas de todas las ventas

* Dentista
:PROPERTIES:
:CREADO:   [2019-02-02 Sat 12:16]
:END:

Diferencia....  3000
Perno....   ..... 2500
Corona.......... 7800
Total 13300
2/2... 5300
Saldo 8000


