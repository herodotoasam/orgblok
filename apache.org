* instalacion vps
** sudo apt -y install apache2
** sudo systemctl restart apache2
** iptables
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 80 -j ACCEPT
sudo netfilter-persistent save
*** en el vps donweb tuve problemas:
    iptables: Index of insertion too big.
    lo solucione sacando el 6 despues del INPUT
    netfilter-persistent: command not found
    lo solucione instalando netfilter-persistent
** sudo apt -y install php libapache2-mod-php
php -v
sudo systemctl restart apache2
** test de ip on the browser to see the apache index page
** sudo apt install apache2-dev libapache2-mod-wsgi-py3 
** crear los directorios en /var/www/
/var/www/webApp y /var/www/webApp/webApp
** chown y chmod 755 a los directorios /var/www/
** install pip3/flask/flask_sqlalchemy
   sudo apt install python3-pip
   sudo pip3 install flask
   sudo pip3 install flask_sqlalchemy
   sudo pip3 install mysql-connector-python
** configure y enable virtual host en apache 
   sudo vim /etc/apache2/sites-avalaible/webApp.conf

   <VirtualHost *:80>
		ServerName ip
		ServerAdmin email@mywebsite.com
		WSGIScriptAlias / /var/www/webApp/webapp.wsgi
		<Directory /var/www/webApp/webApp/>
			Order allow,deny
			Allow from all
		</Directory>
		Alias /static /var/www/webApp/webApp/static
		<Directory /var/www/webApp/webApp/static/>
			Order allow,deny
			Allow from all
		</Directory>
		ErrorLog ${APACHE_LOG_DIR}/error.log
		LogLevel warn
		CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

Cambiarle la ip y ponerle la verdadera ip
hacer el directorio static en webApp.
** sudo a2ensite webApp 
luego sudo systemctl reload apache2
** hacer el archivo webapp.wsgi en /var/www/webApp/
#!/usr/bin/python3
import sys
import logging
logging.basicConfig(stream=sys.stderr)
sys.path.insert(0,"/var/www/webApp/")

from webApp import app as application
application.secret_key = 'Add your secret key'
**  subir los archivos y carpetas de la aplicacion
   recordar que app.py debe llamarse __init__.py
**  crear la base de datos mysql
*** instalar mariadb
**** primero 
sudo apt -y update
sudo apt -y install software-properties-common gnupg2
sudo apt -y upgrade
sudo reboot
**** segundo
apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xF1656F24C74CD1D8
add-apt-repository "deb [arch=amd64] http://mariadb.mirror.liquidtelecom.com/repo/10.5/debian $(lsb_release -cs) main"
**** tercero
     apt update
     apt install mariadb-server mariadb-client
**** cuarto
     mysql_secure_installation
*** instalar mysql
    sudo apt install mysql-server
*** configurar
    sudo mysql; (como root)
    CREATE DATABASE hero;
    CREATE USER 'hero' IDENTIFIED BY 'ata';
    GRANT ALL PRIVILEGES ON hero.* to hero;

    mejor opcion mas general y con super:
    CREATE USER '{{ username }}'@'%' IDENTIFIED BY '{{ password }}';
    GRANT ALL PRIVILEGES ON *.* TO '{{ username }}'@'%' WITH GRANT OPTION;
    ALTER USER 'user'@'%' IDENTIFIED WITH mysql_native_password BY 'password';

    FLUSH PRIVILEGES;
    exit;

    entro como
    mysql -p
    y pongo la password
*** cuidado con sqlalchemy y los users 
    pq usa un usuario tipo hero@localhost
    me paso que no me aceptaba la coneccion, y creo el usuario pero
    ese usuario descubro despues de mucho debug que no tenia el grant
    all privileges with grant option por el usuario root.

**  sudo service apache2 restart
**  abrir la ip en el browser
* bajar archivo del server
** scp  -P 5657 root@168.181.186.241:/var/www/webApp/webApp/__init__.py ~/anki/__init__.py
desde nuestra maquina ubicamos el archivo que queremos bajar y ponemos
el nombre que le vamos a asignar y listo. 

Util para bajar el backup de la base de datos.
** scp -P 5088 root@179.43.127.47:/root/backup.sql ~/backup.sql
* mysqlbinlog
para que el log sea visible debo deshabilitar la encryptacion del log.

1. stop the server   sytemctl stop mariadb
2. set encrypt_binlog=OFF  vim /etc/mysql/my.cnf
3. restart the server  systemctl restart mariadb


luego tengo que ENABLE BINARY LOG IN MYSQL
1. vim /etc/mysql/mariadb.conf.d/50-server.conf
    desmarcar las siguientes lineas que estan comentadas
    log_bin                = /var/log/mysql/mysql-bin.log
    expire_logs_days        = 10
    max_binlog_size        = 100M
2. restart the server  systemctl restart mariadb

para ver el log
cd /var/log/mysql
los log tienen la forma mysql-bin.00001 etc.
mysqlbinlog mysql-bin.0000x > output.log
y tenemos en lenguaje plano los movimientos en el log
* problemas de can't connect to mysql server error 111
se soluciona en el archivo de configuracion
en alpine esta en /etc/my.cnf.d/mariadb-server.cnf
comente la linea skip-networking y eso permitio que se pudiera conectar.
service mariadb restart   (en alpine)
* problemas con mysql-connector-python
parece que la actualizacion da error que no reconoce utf8.
la solucion provisoria es actualizar a la version vieja
pip install mysql-connector-python==8.0.29
* problemas con la instalacion del mariadb-connector-c
intento con pip install mariadb pero me pide mariadb-connector-c y
aunque lo tengo instalado lo mismo me causa problemas. Por el momento
se deja.
* problemas con la coneccion de mariadb y adminer
  primero daba connection refused

  ir a /etc/mysql/mariadb.conf.d/50-server.cnf
  y en la linea 
  tambien descomentar la linea de port=3306
  bind-address = 127.0.0.1 poner
  bind-address = 0.0.0.0 lo cual permitira no solo conecciones de
  localhost sino de todos lados.

  luego chequear con netstat -ant | grep 3306
  
  en mysql como root
  hacer:
  grant all privileges on *.* to 'hero'@'186.12.184.224' identified by
  'password';
  flush privileges;
  
  luego de resetear
  systemctl restart mariadb y app
  ya el mensaje de adminer cambia si damos la password equivocada
  la password es la de la base de datos no la del servidor.
  
