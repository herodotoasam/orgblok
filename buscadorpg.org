* pivotpg
** formular por sql la col
p.e. ym(fecha) as fecha o y(fecha) as year
-col fecha 
-col year
** poner correctamente el cast a toda expresion (especial campos money)
deuda::numeric=0
deuda::numeric>0
ic::numeric*cc::numeric
round((deuda::numeric/cuota::numeric),2)
** tener en cuenta los nulos
si algun valor nulo puede dar problemas en una operacion, eliminar los
nulos mediante sql
p.e.
y(ultpago) is not null
cuota::numeric is not null
** corregir las funciones que usa postgres
p.e to_char en vez de strftime
* pg_execute
** -array  tengo que nominar expresamente el array y luego 
las columnas son elementos de ese array
pe. -array b  $b(id)
** insert de fechas deben hacerse con '$fecha'
* plpgsql
** declare
DECLARE
    myrec record;
	i integer;
   vto date;
declarar las variables a utilizar no olvidar el ;;;;
** select ... into 
SELECT ventas.id as id, fecha,ic,cc,primera,ent,p,pp,pfecha,pper,pic,pcc,pprimera,condonada,pcondo,devuelta,
saldo,clientes.zona as zona,asignado INTO myrec FROM ventas,clientes,zonas WHERE 
clientes.id=ventas.idcliente and clientes.zona=zonas.zona and
ventas.id=$1;
permite poner el resultado de un select dentro de una variable (type
record o row, mejor record si el select proviene de un query como
este)
luego se usan las columnas qualificadas como myrec.fecha etc.
** for 
for i  in 1 .. myrec.cc loop
....
end loop;
se puede iterar en un rango integral tambien en reversa y a los saltos
en este caso itero hasta el valor de la cc. 
** case when
case when myrec.p=1 then 
select myrec.primera + ((i-1) || ' MONTH')::INTERVAL into vto;
when myrec.p=3 then
select myrec.primera + ((i-1) || ' WEEKS')::INTERVAL into vto;
when myrec.p=2 then 
select myrec.primera + ((i-1)*2 || ' WEEKS')::INTERVAL into vto;
else
RAISE EXCEPTION 'Periodicidad nula... Corregir!!!';
end case;

el case when es igual a lo conocido. la unica diferencia es poner end
case;
** raise exception ;;; genial!!!
pq puedo poner mensajes de error personalizados que luego en un
momento dado seran inapreciables. p.e. en este caso aunque no tengo
una periodicidad nula, si aparece por error se sabra cual es el error.
** quote_literal
se puede solucionar el tema de un mensaje o cadena tipo format
con quote_literal que recibe anyelement y lo convierte a string y lo
mete en la posicion del % que pusimos en la cadena.
** interval
como lograr acomodar un interval que se make con una variable
((i-1) || ' MONTH')::INTERVAL
o sea se usa de ultima || para ampersand el resultado de la variable
con la palabra month y a ello se lo castea a interval y eso mismo se
lo suma o resta a la fecha en crudo, o sea funciona como un typo de
datos.
** variable
la asignacion dentro del body directamente se hace 
foo := bar*2
(esto me dio un par de errores pq ponia variable foo := bar*2 lo cual
era erroneo y provenia de mi pasado con tcl.)
