 Notas sobre instalacion de ubuntu-budgie
** no lectura de usb
se soluciono solo cuando hacemos sudo apt update.
debe ser algo desfasado, pero se soluciona solo.
** mala experiencia con volumen encriptado en esta notebook
no arrancaba sola, necesitaba un control/alt/delete lo cual me parecia
un poco inseguro pq le podia hacer mal al hardware a la larga
tampoco fue bueno encriptar la carpeta personal, pq tiraba errores en
el arranca y lo enlentecia demas.
** para que tome la cuenta de google
hay que autorizar desde google el uso de software de terceros, y eso
permitira sincronizar calendarios y demas.

** para que no se resetee las X y se pierda todo con C-Alt-Retroceso
encima que es parecido a C-Shift-Retroceso que se usa mucho en Emacs
 en /etc/X11/xorg.config se pone:
 #+BEGIN_EXAMPLE
 Section "ServerFlags"
 Option "DontZap"  "yes"
 EndSection
 #+END_EXAMPLE
y eso deshabilita el zap

** para ver fecha con la hora en la barra del panel
en un terminal
#+BEGIN_EXAMPLE
gsettings set org.gnome.desktop.interface clock-show-date true
#+END_EXAMPLE



* Actualizar version de ubuntu 'a mano'
sudo apt install update-manager-core

Next, edit a configuration file using nano or your preferred command line text editor.
sudo nano /etc/update-manager/release-upgrades
At the bottom of this file, change the value of Prompt from lts to normal.
Prompt=normal

luego en linea de comando:
do-release-upgrade
* Notas sobre lubuntu
agregar a panel "agente distribucion de teclado"
configurar deseleccionar Mantener las distribuciones del sistema
agregar la que falta ya sea latam o us
agregar monitor del sistema

* Vim
 
** instalar gvim con vim-gtk
** poner en home .vimrc que esta en /orgblok que sacamos de git
** instalar Plug / buscar vim plug en google
   instalar curl
** instalar los plugins
   :PlugInstall
* Antes que nada instalar con sudo apt install ...
1. emacs
2. git
3. firefox
4. vim-gtk
5. xclip
6. zathura
** syncronizar marcadores con firefox hfj024/ataraxia76
** crear clave ssh con gitlab para hacer el git clone sin contraseña
* solucion audio Xubuntu
alsamixer F6 elegir HD-Audio Generic
irse a la derecha a Auto-Mute poner [Disabled]

* Emacs                                                   :emacs:instalacion:

copiar .emacs desde ../orblock
M-x package-refresh-contens

** Lo unico que falta instalar
con Mx package-install
1. org-bullets
2. ido-vertical-mode
3. smartparens
4. auto-complete

** ColorScheme usado: leuven
que se instala desde Mx list-packages y ahi lo elijo e instalo y luego
para que los colorscheme queden pongo save colorscheme.

** arregle la persistencia de la sesion anterior y de los archivos recientes
#+BEGIN_EXAMPLE
(desktop-save-mode 1)
(recentf-mode 1)
(setq recentf-max-menu-items 25)
#+END_EXAMPLE

** ag
*** instalar silver searcher 
#+BEGIN_EXAMPLE
sudo apt install silversearcher-ag
#+END_EXAMPLE
*** luego instalar ag
Mx package-install ag
** DEPRECATED: yasnippets
instalar de list-packages
luego agregar a .emacs
#+BEGIN_EXAMPLE
(add-to-list 'load-path
	     "~/.emacs.d/plugins/yasnippet")
(require 'yasnippet)
(yas-global-mode 1)
#+END_EXAMPLE

Los snippets residen en ~/.emacs.d/snippets/prog-mode/
y tengo un git en ~/.emacs.d/snippets
** instalar org en su ultima version
desde package-list-packages
instalar desde alli pq de otra forma no funciona.
* instalar postgres (kubuntu)
1. sudo apt-get install wget ca-certificates
2. wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |
sudo apt-key add -
1. sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/
   `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
2. sudo apt-get update
3. sudo apt-get install postgresql postgresql-contrib
4. sudo su - postgres psql
* instalar pgadmin 4 (kubuntu)
1. sudo apt-get install pgadmin4 pgadmin4-apache2
2. durante la instalacion damos mail/password
3. para acceder a pgadmin ponemos localhost/pgadmin/browser
* instalar omnidb
1. bajar en omnidb.org
2. instalar el omnidb app y establecer conexion.
* instalar pgmodeler
1. instalar qt (bajar qt opensource de www.qt.io es un archivo run 
que se le da chmod u+x y luego se ejecuta con ./qt...run y se instala,
hacer skip donde piden los datos personales) 
Instalar en /home/hero/.Qt/
2. instalar solo la version  5.9.7 de Qt para no instalar todo pq es
mucho y es lerdo (aun asi me instalo cosas de android, ver si en
futuras instalaciones se podria evitar)
1. bajar el source de pgmodeler ultimo alpha, no clonar el pgmodeler.
2. seguir las instrucciones de intalacion de pgmodeler sobre las siguientes
   1. 1: pkg­-config libxml-­2.0 ­--cflags --libs
      2: ­-I/usr/include/libxml2 ­-lxml2 
      si no esta la orden pkg--config pienso que habra que instalarla
      una vez me dijo que no habia tal paquete y luego se curso como
      un paquete del sistema. y me dio un mensaje de error, con ese
      mensaje de error busque y encontre una pagina que parece que
      contenia un bug de debian sobre el tema y encontre una solucion
      en los comentarios, instalando a mano libxml2 de nuevo hasta
      obtener la salida que dice en 2.
[[https://stackoverflow.com/questions/31797524/r-devtools-fails-as-package-libxml-2-0-was-not-found-in-the-pkg-config-search-p][solucionar el problema de libxml2]]
wget ftp://xmlsoft.org/libxml2/libxml2-2.9.2.tar.gz
tar xvf libxml... 
./configure --prefix=/usr --disable-static --with-history && make
sudo make install
y ya esta solucionado el problema de libxml2
   2. 1: pkg­-config libpq --cflags --libs
      2: ­I/usr/include ­L/usr/lib64/libpq.so 
      tambien da una salida erronea y encontre una solucion en otra
      pagina
      [[https://github.com/pgmodeler/pgmodeler/issues/43][solucionar dependencia libpq]]
      apt-get install libpq-dev libpq5
     
3. orden de make
/home/hero/.Qt/5.9.7/gcc_64/bin/qmake -r PREFIX=/home/hero/.pgmodeler BINDIR=/home/hero/.pgmodeler \
                         PRIVATEBINDIR=/home/hero/.pgmodeler
                         PRIVATELIBDIR=/home/hero/.pgmodeler/lib
                         pgmodeler.pro
4. se travo el make con un error por un libutils.so.1.0.0
   [[https://github.com/pgmodeler/pgmodeler/issues/583][solucion a libutils.so.1.0.0]]
    apt-get install libgl1-mesa-dev
5. make
6. sudo make install
7. editar el pgmodeler.vars
export QT_ROOT="/home/hero/.Qt/5.9.7/gcc_64"
export PGMODELER_ROOT="/home/hero/.pgmodeler"
8. seguir las instrucciones 
cambiarle el nombre a pgmodeler.sh y mv a /etc/profile.d
9. arrancar pgmodeler en /.pgmodeler


* instalacion de TCL (kubuntu y otros ubuntus)
1. emacs por supuesto (no se si hace falta vim-gtk)
2. sqlite3 libsqlite3-tcl
3. tklib bwidget libtk-img tcllib
4. tk8.6-dev tcl8.6-dev
5. instalar Telegram-Desktop y bajar los itcl/itk/pdf4tcl/tablelist
   y moverlos a /usr/share/tcltk/
6. nuevos para postgres:
   libpgtcl 
   postgresql-pltcl-11

** instalar itcl /itk de la pagina
Nueva informacion: Bajar el itk4.0.4 [[https://sourceforge.net/projects/incrtcl/files/latest/download?source%3Dtyp_redirect][itk apropiado (No el 4.1.0 o
nuevo)]]
Para editar buscar "common install locations" es mas facil y alli
editamos tres veces y ponemos la ruta /usr/lib/tk8.6


./configure
make all
make test
sudo make install

editar el configure de itk y poner la ruta del /usr/lib/tk8.6/

buscar 
 # check in a few common install locations
#+BEGIN_EXAMPLE
 # check in a few common install locations
	    if test x"${ac_cv_c_tclconfig}" = x ; then
		for i in `ls -d ${libdir} 2>/dev/null` \
			`ls -d ${exec_prefix}/lib 2>/dev/null` \
			`ls -d ${prefix}/lib 2>/dev/null` \
			`ls -d /usr/local/lib 2>/dev/null` \
			`ls -d /usr/contrib/lib 2>/dev/null` \
			`ls -d /usr/lib 2>/dev/null` \
			`ls -d /usr/lib64 2>/dev/null` \
			`ls -d /usr/lib/tcl8.6 2>/dev/null` \
2497                `ls -d /usr/lib/tcl8.5 2>/dev/null` \
			`ls -d /usr/lib/tk8.6 2>/dev/null` \   <============ agregado por mi!!!!!!!!!!!!! ojo incluye tambien la barra invertida
#+END_EXAMPLE
tambien en linea 3584 
en ambas lineas hay que hacer el agregado en 2497 y 3584 de `ls -d /usr/lib/tk8.6 2>/dev/null` \
** pdf4tcl/tablelist
ultimo tablelist de nemethi

ambos a /usr/share/tcltk/

* instalacion de python
** instalar con apt python3-tk y python3-pip
** instalar modulos con pip3 install modulo
1. dateutils
2. fastnumbers
3. fpdf
4. Pmw
5. pyperclip
6. 

** poner las fuentes DejaVu / DejaVuBold en pyrx

** editar .bashrc
#+BEGIN_EXAMPLE
alias cd..='cd ..'
alias q='exit'
xmodmap ~/.Xmodmap
#+END_EXAMPLE
* instalacion de mu4e
** instalar offineimap con apt
 luego poner .offlineimaprc
#+BEGIN_EXAMPLE
[general]
# List of accounts to be synced, separated by a comma.
accounts = main

[Account main]
# Identifier for the local repository; e.g. the maildir to be synced via IMAP.
localrepository = main-local
# Identifier for the remote repository; i.e. the actual IMAP, usually non-local.
remoterepository = main-remote

[Repository main-local]
# OfflineIMAP supports Maildir, GmailMaildir, and IMAP for local repositories.
type = Maildir
# Where should the mail be placed?
localfolders = ~/Maildir

[Repository main-remote]
type = Gmail
remoteuser = romitexcba@gmail.com
remotepass = ataH3161.
folderfilter = lambda foldername: foldername not in ['[Gmail]/All Mail']
# Necessary as of OfflineIMAP 6.5.4
sslcacertfile = /etc/ssl/certs/ca-certificates.crt

#+END_EXAMPLE
** hacer mu index en Maildir para poder hacer un mu find 
** instalar mu4e de apt
** hacer mkdir dentro de Maildir de las carpetas que emacs pide
* instalacion de red local
** del lado del servidor
*** sudo apt install nfs-common nfs-kernel-server 
*** editar /etc/exports
/home/hero/rx  192.168.0.39/24(rw,no_subtree_check)
de donde /home/hero/rx es el directorio a compartir
y 192.168.0.39 es la direccion ip de la maquina servidor que la
sacamos de ifconfig donde dice Direc. inet
** del lado del cliente
*** sudo apt install nfs-common
*** mount 192.168.0.39:/home/hero/rx /home/dir_destinado_al_montaje
*** hacemos la correccion en fichaje.py para que romitex.db lo lea del dir_destinado_al_montaje en vez del usual rx
** problemas
*** al abrir o cerrar
respetar el orden abrir servidor primero, cerrar primero el cliente
*** ver si la red funciona!!!!!!
me preocupaba pq no andaba y era que el puto fibertel no andaba ese
dia.
* instalacion impresora EPSON L380
** [[http://www.epson-driver.com/2017/06/epson-l380-driver-download-windows-mac-linux.html][pagina de busqueda EPSON]]
** [[http://download.ebz.epson.net/dsc/search/01/search/?OSC%3DLX][pagina especifica de drivers Linux]]
** instalar los dos drivers que da para impresora !!
** previamente instalar la dependencia que requiere
apt-get install lsb
** el driver de scaner no me funciono
* desactivar el mousepad de la notebook
  sudo modprobe -r psmouse 
* instalar fzf 
   git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
   ~/.fzf/install
[[http://owen.cymru/fzf-ripgrep-navigate-with-bash-faster-than-ever-before/] 
[Pagina de fzf]]
en especial notar que en bash con C-r se busca muy eficientemente en la 
historia del bash lo cual arregla todos los problemas que uno tuvo con el bash 
en especial el tema anular touchpad con el modprobe o hacer un commit etc.


* corregir speeddating (plugin necesario en vimorganizer)
        agregar en ~/.vim/plugged/vim-speeddating.vim

        SpeedDatingFormat %Y-%m-%d%[ T_-]%a
        donde %a es la parte de la fecha que maneja la abreviatura del nombre 
        del dia.

* red con ssh
** instalar ssh en ambas maquinas
instala varios archivos
** obtener ip con ifconfig instalar net-tools
** conectar
ssh -p 22 hero@192.168.0.2.243
password y voile!!!
estamos adentro y viceversa.
** si queremos ejecutar programas graficos agregar -X en la orden
ssh -X -p 22 ...
** en dolphin para agregar una capeta del disco compartido
iniciar knetattach que no esta en el menu y no se como llegue a el
te permite hacer una carpeta con los datos de ssh.
poniendo como usuario el usuario que vamos a acceder, no el
nombremaquina, en este caso fede, y servidor el numero obtenido por
ifconfig o sea 192.168.0.243 y el dir que queremos acceder, nos pide
password y ya esta.
** impresoras creo que va aparte de esto pero se compartio sin problema
** faltaria ver como se podria via ssh compartir el romitex.db solo

